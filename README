# -*- mode:org; mode:auto-fill; fill-column:80; coding:utf-8; -*-
#+title: TMG: A Tibetan Music Generation Project
#+author: Sangjee Dondrub
#+date: \today
#+babel: :cache yes
#+latex_class: note
#+options: toc:nil date:nil
#+creator: Sangjee Dondrub <sangjeedondrub@live.com>
#+latex_header: \subtitle{Yep, Music, You know.}
#+latex_header: \doclangselection{en}
#+latex_header: \usemnote{no}
#+latex_header: \docinstselect{sangjee}

* Table of Contents :TOC:
- [[#get-started][Get started]]
- [[#ondo-data-collection][ONDO Data Collection]]
- [[#data-preprocessing][Data Preprocessing]]
  - [[#mp3-to-midi][mp3 to midi]]
  - [[#vocal-removing][Vocal removing]]
  - [[#shell-script-to-do-both-removing-vocal-and-midi-conversion][Shell script to do both =removing-vocal= and =midi-conversion=]]
- [[#dataset-class][Dataset Class]]
  - [[#midi-dataset][Midi Dataset]]
  - [[#accompaniment-dataset][Accompaniment Dataset]]
  - [[#audio-text-dataset][Audio-Text Dataset]]
- [[#model-design][Model Design]]
- [[#model-training][Model Training]]
- [[#model-evaluation][Model Evaluation]]
- [[#conclusion][Conclusion]]
- [[#bibliography][Bibliography]]

* DONE Get started
CLOSED: [2023-07-09 Sun 23:31]

Python env

#+begin_src sh
poetry env use 3.9
#+end_src

Install dependencies

#+begin_src sh
make depends
#+end_src

Test

#+begin_src sh
make test
#+end_src

Docs

#+begin_src sh
make docs
#+end_src

Pre-commit

#+begin_src sh
make commit
#+end_src

Build Package

#+begin_src sh
make build
#+end_src

* ONDO Data Collection
:LOGBOOK:
CLOCK: [2023-07-10 Mon 00:44]--[2023-07-10 Mon 01:13] =>  0:29
CLOCK: [2023-07-09 Sun 23:29]--[2023-07-09 Sun 23:58] =>  0:29
:END:

http://music.tibet3.com/

#+begin_src sh
scrapy run spider music_crawl/spider/tibet3.py
#+end_src

#+begin_src sh
ls data/mp3 | wc -l
#+end_src

#+RESULTS:
: 247

* Data Preprocessing

** mp3 to midi

Basic Pitch, a free audio-to-MIDI converter with pitch bend detection, built by
Spotify, Learn more at: https://github.com/spotify/basic-pitch

#+begin_src sh
pip install basic-pitch
basic-pitch output-path/ sample.mp3
#+end_src

+ https://github.com/jason9693/midi-neural-processor

#+begin_src sh
ls data/midi/ | wc -l
#+end_src

#+RESULTS:
: 76

** Vocal removing

+ https://vocalremover.org/
+ https://github.com/deezer/spleeter

Change the github host to =ghproxy.com= in =model= module in =spleeter=.

#+begin_src sh
spleeter separate -p spleeter:2stems -o output sample.mp3
#+end_src

** Shell script to do both =removing-vocal= and =midi-conversion=

#+begin_src sh :tangle remove-vocal-and-midi.sh :eval no
for mp3 in data/mp3/*.mp3; do
    echo "Processing $mp3"
    # remove vocals
    spleeter separate -p spleeter:2stems -o data/sep "$mp3"
    fname="${mp3%.*}"
    fname=`basename "$fname"`
    acc="data/sep/$fname/accompaniment.wav"
    mkdir -p data/midi/$fname
    basic-pitch data/midi/$fname "$acc"
    done
done
#+end_src

* Dataset Class

** Midi Dataset
** Accompaniment Dataset
** Audio-Text Dataset

* Model Design

+ https://carlosholivan.github.io/DeepLearningMusicGeneration/
+ https://github.com/Khamies/PianoNotes-LSTM-Generation
+ https://www.tensorflow.org/tutorials/audio/music_generation
+ [[https://medium.com/data-science-in-your-pocket/music-generation-using-musictransformer-with-codes-c7be89ba85b1][music generation with transformer]]

* Model Training

* Model Evaluation

* Conclusion
* Bibliography
:PROPERTIES:
:UNNUMBERED: t
:END:

bibliography:~/roam/bibliography/references.bib,~/roam/bibliography/todo.bib,~/roam/bibliography/done.bib,~/roam/bibliography/book.bib

bibliographystyle:apalike
